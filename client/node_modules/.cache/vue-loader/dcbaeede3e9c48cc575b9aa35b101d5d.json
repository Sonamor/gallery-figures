{"remainingRequest":"C:\\Users\\ayato\\Documents\\GitHub\\gallery-map-car\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ayato\\Documents\\GitHub\\gallery-map-car\\client\\src\\components\\FileUpload.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\ayato\\Documents\\GitHub\\gallery-map-car\\client\\src\\components\\FileUpload.vue","mtime":1581972616823},{"path":"C:\\Users\\ayato\\Documents\\GitHub\\gallery-map-car\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ayato\\Documents\\GitHub\\gallery-map-car\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\ayato\\Documents\\GitHub\\gallery-map-car\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\ayato\\Documents\\GitHub\\gallery-map-car\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ayato\\Documents\\GitHub\\gallery-map-car\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hZGRJY29uewogIGhlaWdodDo5NnB4OwogIHdpZHRoOjk2cHg7CiAgYmFja2dyb3VuZDogdXJsKCcuLi9hc3NldHMvaWNvbnMveGwtcGx1cy5wbmcnKTsKICBjdXJzb3I6cG9pbnRlcjsKICBtYXJnaW46IDA7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogNTAlOwogIGxlZnQ6IDUwJTsKICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Cn0KLmlucHV0ZmlsZSB7CiAgd2lkdGg6IDAuMXB4OwogIGhlaWdodDogMC4xcHg7CiAgb3BhY2l0eTogMDsKICBvdmVyZmxvdzogaGlkZGVuOwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB6LWluZGV4OiAtMTsKfQo="},{"version":3,"sources":["FileUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FileUpload.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"file\">\n    <form enctype=\"multipart/form-data\" @submit.prevent=\"onSubmit\">\n      <div class=\"fields\">\n\n          <!--<div class=\"bg-white bg-contain bg-no-repeat addIcon\"></div>\n          <input type=\"file\" ref=\"file\" @change=\"onSelect\" class=\"upload-box\">-->\n\n          <input type=\"file\" ref=\"file\" @change=\"onSelect\" class=\"inputfile\" />\n          <div class=\"bg-white bg-contain bg-no-repeat addIcon\"></div>\n      </div>\n      <div class=\"fields\">\n        <button>Valider</button>\n      </div>\n      <div class=\"message\">\n        <h5>{{message}}</h5>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'FileUpload',\n  data() {\n    return {\n      file: '',\n      message: '',\n    };\n  },\n  methods: {\n    onSelect() {\n      const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n      const file = this.$refs.file.files[0];\n      this.file = file;\n\n      if (!allowedTypes.includes(file.type)) {\n        this.message = 'Only images are required';\n      }\n      if (file.size > 5000000) {\n        this.message = 'Too large, max size allowed is 500KB';\n      }\n    },\n    async onSubmit() {\n      const formData = new FormData();\n      formData.append('file', this.file);\n\n      try {\n        await axios.post('http://localhost:3000/api/upload', formData);\n        this.message = 'Succ√®s';\n      } catch (err) {\n        this.message = err.response.data.error;\n      }\n    },\n  },\n};\n</script>\n<style>\n\n  .addIcon{\n    height:96px;\n    width:96px;\n    background: url('../assets/icons/xl-plus.png');\n    cursor:pointer;\n    margin: 0;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    display: inline-block;\n  }\n  .inputfile {\n    width: 0.1px;\n    height: 0.1px;\n    opacity: 0;\n    overflow: hidden;\n    position: absolute;\n    z-index: -1;\n  }\n</style>\n"]}]}